{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport _ from \"underscore\";\nimport { API_DOMAIN } from \"../../constants\";\nimport { fetchChartData } from \"../chart/chartSlice\";\nexport const languageSlice = createSlice({\n  name: \"language\",\n  initialState: {\n    tags: {}\n  },\n  reducers: {\n    select: (state, action) => {\n      const selectedTag = state.tags.find(tag => tag.name === action.payload);\n      selectedTag.displayed = !selectedTag.displayed;\n    },\n    add: (state, action) => {\n      state.tags = _.map(action.payload, language => {\n        return {\n          name: language.name,\n          displayed: false\n        };\n      });\n    }\n  }\n});\nexport const fetchTagData = () => {\n  return dispatch => {\n    fetch(`${API_DOMAIN}/tags`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n        \"Access-Control-Allow-Origin\": \"*\"\n      }\n    }).then(res => res.json()).then(languages => {\n      dispatch(languageSlice.actions.add(languages));\n    });\n  };\n};\nexport const fetchSelectedLanguages = name => {\n  return dispatch => {\n    dispatch(languageSlice.actions.select(name));\n    dispatch(fetchChartData(name));\n  };\n};\nexport default languageSlice.reducer;","map":{"version":3,"sources":["/Users/jg443z/1234/src/features/language/languageSlice.js"],"names":["createSlice","_","API_DOMAIN","fetchChartData","languageSlice","name","initialState","tags","reducers","select","state","action","selectedTag","find","tag","payload","displayed","add","map","language","fetchTagData","dispatch","fetch","method","headers","Accept","then","res","json","languages","actions","fetchSelectedLanguages","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,OAAOC,CAAP,MAAc,YAAd;AACA,SAASC,UAAT,QAA2B,iBAA3B;AACA,SAASC,cAAT,QAA+B,qBAA/B;AAEA,OAAO,MAAMC,aAAa,GAAGJ,WAAW,CAAC;AACvCK,EAAAA,IAAI,EAAE,UADiC;AAEvCC,EAAAA,YAAY,EAAE;AACZC,IAAAA,IAAI,EAAE;AADM,GAFyB;AAKvCC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,MAAM,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACzB,YAAMC,WAAW,GAAGF,KAAK,CAACH,IAAN,CAAWM,IAAX,CAAgBC,GAAG,IAAIA,GAAG,CAACT,IAAJ,KAAaM,MAAM,CAACI,OAA3C,CAApB;AACAH,MAAAA,WAAW,CAACI,SAAZ,GAAwB,CAACJ,WAAW,CAACI,SAArC;AACD,KAJO;AAKRC,IAAAA,GAAG,EAAE,CAACP,KAAD,EAAQC,MAAR,KAAmB;AACtBD,MAAAA,KAAK,CAACH,IAAN,GAAaN,CAAC,CAACiB,GAAF,CAAMP,MAAM,CAACI,OAAb,EAAsBI,QAAQ,IAAI;AAC7C,eAAO;AAAEd,UAAAA,IAAI,EAAEc,QAAQ,CAACd,IAAjB;AAAuBW,UAAAA,SAAS,EAAE;AAAlC,SAAP;AACD,OAFY,CAAb;AAGD;AATO;AAL6B,CAAD,CAAjC;AAkBP,OAAO,MAAMI,YAAY,GAAG,MAAM;AAChC,SAAOC,QAAQ,IAAI;AACjBC,IAAAA,KAAK,CAAE,GAAEpB,UAAW,OAAf,EAAuB;AAC1BqB,MAAAA,MAAM,EAAE,KADkB;AAE1BC,MAAAA,OAAO,EAAE;AACP,wBAAgB,kBADT;AAEPC,QAAAA,MAAM,EAAE,kBAFD;AAGP,uCAA+B;AAHxB;AAFiB,KAAvB,CAAL,CAQGC,IARH,CAQQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EARf,EASGF,IATH,CASQG,SAAS,IAAI;AACjBR,MAAAA,QAAQ,CAACjB,aAAa,CAAC0B,OAAd,CAAsBb,GAAtB,CAA0BY,SAA1B,CAAD,CAAR;AACD,KAXH;AAYD,GAbD;AAcD,CAfM;AAiBP,OAAO,MAAME,sBAAsB,GAAG1B,IAAI,IAAI;AAC5C,SAAOgB,QAAQ,IAAI;AACjBA,IAAAA,QAAQ,CAACjB,aAAa,CAAC0B,OAAd,CAAsBrB,MAAtB,CAA6BJ,IAA7B,CAAD,CAAR;AACAgB,IAAAA,QAAQ,CAAClB,cAAc,CAACE,IAAD,CAAf,CAAR;AACD,GAHD;AAID,CALM;AAOP,eAAeD,aAAa,CAAC4B,OAA7B","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport _ from \"underscore\";\r\nimport { API_DOMAIN } from \"../../constants\";\r\nimport { fetchChartData } from \"../chart/chartSlice\";\r\n\r\nexport const languageSlice = createSlice({\r\n  name: \"language\",\r\n  initialState: {\r\n    tags: {}\r\n  },\r\n  reducers: {\r\n    select: (state, action) => {\r\n      const selectedTag = state.tags.find(tag => tag.name === action.payload);\r\n      selectedTag.displayed = !selectedTag.displayed;\r\n    },\r\n    add: (state, action) => {\r\n      state.tags = _.map(action.payload, language => {\r\n        return { name: language.name, displayed: false };\r\n      });\r\n    }\r\n  }\r\n});\r\n\r\nexport const fetchTagData = () => {\r\n  return dispatch => {\r\n    fetch(`${API_DOMAIN}/tags`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Accept: \"application/json\",\r\n        \"Access-Control-Allow-Origin\": \"*\"\r\n      }\r\n    })\r\n      .then(res => res.json())\r\n      .then(languages => {\r\n        dispatch(languageSlice.actions.add(languages));\r\n      });\r\n  };\r\n};\r\n\r\nexport const fetchSelectedLanguages = name => {\r\n  return dispatch => {\r\n    dispatch(languageSlice.actions.select(name));\r\n    dispatch(fetchChartData(name));\r\n  };\r\n};\r\n\r\nexport default languageSlice.reducer;\r\n"]},"metadata":{},"sourceType":"module"}