{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { API_DOMAIN } from \"../../constants\";\nexport const chartSlice = createSlice({\n  name: \"chart\",\n  initialState: {\n    data: [],\n    date: \"2019-04-11\"\n  },\n  reducers: {\n    add: (state, action) => {\n      state.data = action.payload;\n    }\n  }\n});\nexport const fetchChartData = language => {\n  return dispatch => {\n    fetch(`${API_DOMAIN}/websites?=${language}`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n        \"Access-Control-Allow-Origin\": \"*\"\n      }\n    }).then(res => res.json()).then(websites => {\n      dispatch(chartSlice.actions.add(websites));\n    });\n  };\n};\nexport default chartSlice.reducer;","map":{"version":3,"sources":["/Users/jg443z/1234/src/features/chart/chartSlice.js"],"names":["createSlice","API_DOMAIN","chartSlice","name","initialState","data","date","reducers","add","state","action","payload","fetchChartData","language","dispatch","fetch","method","headers","Accept","then","res","json","websites","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,SAASC,UAAT,QAA2B,iBAA3B;AAEA,OAAO,MAAMC,UAAU,GAAGF,WAAW,CAAC;AACpCG,EAAAA,IAAI,EAAE,OAD8B;AAEpCC,EAAAA,YAAY,EAAE;AACZC,IAAAA,IAAI,EAAE,EADM;AAEZC,IAAAA,IAAI,EAAE;AAFM,GAFsB;AAMpCC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,GAAG,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACtBD,MAAAA,KAAK,CAACJ,IAAN,GAAaK,MAAM,CAACC,OAApB;AACD;AAHO;AAN0B,CAAD,CAA9B;AAaP,OAAO,MAAMC,cAAc,GAAGC,QAAQ,IAAI;AACxC,SAAOC,QAAQ,IAAI;AACjBC,IAAAA,KAAK,CAAE,GAAEd,UAAW,cAAaY,QAAS,EAArC,EAAwC;AAC3CG,MAAAA,MAAM,EAAE,KADmC;AAE3CC,MAAAA,OAAO,EAAE;AACP,wBAAgB,kBADT;AAEPC,QAAAA,MAAM,EAAE,kBAFD;AAGP,uCAA+B;AAHxB;AAFkC,KAAxC,CAAL,CAQGC,IARH,CAQQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EARf,EASGF,IATH,CASQG,QAAQ,IAAI;AAChBR,MAAAA,QAAQ,CAACZ,UAAU,CAACqB,OAAX,CAAmBf,GAAnB,CAAuBc,QAAvB,CAAD,CAAR;AACD,KAXH;AAYD,GAbD;AAcD,CAfM;AAiBP,eAAepB,UAAU,CAACsB,OAA1B","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport { API_DOMAIN } from \"../../constants\";\n\nexport const chartSlice = createSlice({\n  name: \"chart\",\n  initialState: {\n    data: [],\n    date: \"2019-04-11\"\n  },\n  reducers: {\n    add: (state, action) => {\n      state.data = action.payload;\n    }\n  }\n});\n\nexport const fetchChartData = language => {\n  return dispatch => {\n    fetch(`${API_DOMAIN}/websites?=${language}`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n        \"Access-Control-Allow-Origin\": \"*\"\n      }\n    })\n      .then(res => res.json())\n      .then(websites => {\n        dispatch(chartSlice.actions.add(websites));\n      });\n  };\n};\n\nexport default chartSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}