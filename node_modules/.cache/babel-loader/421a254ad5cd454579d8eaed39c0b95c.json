{"ast":null,"code":"import { field, identity, isArray, isFunction, isIterable, isObject } from 'vega-util';\n\nfunction isBuffer(_) {\n  return typeof Buffer === 'function' && isFunction(Buffer.isBuffer) ? Buffer.isBuffer(_) : false;\n}\n\nexport default function json(data, format) {\n  const prop = format && format.property ? field(format.property) : identity;\n  return isObject(data) && !isBuffer(data) ? parseJSON(prop(data), format) : prop(JSON.parse(data));\n}\njson.responseType = 'json';\n\nfunction parseJSON(data, format) {\n  if (!isArray(data) && isIterable(data)) {\n    data = [...data];\n  }\n\n  return format && format.copy ? JSON.parse(JSON.stringify(data)) : data;\n}","map":{"version":3,"sources":["/Users/jg443z/1234/node_modules/vega-loader/src/formats/json.js"],"names":["field","identity","isArray","isFunction","isIterable","isObject","isBuffer","_","Buffer","json","data","format","prop","property","parseJSON","JSON","parse","responseType","copy","stringify"],"mappings":"AAAA,SACEA,KADF,EACSC,QADT,EACmBC,OADnB,EAC4BC,UAD5B,EACwCC,UADxC,EACoDC,QADpD,QAEO,WAFP;;AAIA,SAASC,QAAT,CAAkBC,CAAlB,EAAqB;AACnB,SAAQ,OAAOC,MAAP,KAAkB,UAAlB,IAAgCL,UAAU,CAACK,MAAM,CAACF,QAAR,CAA3C,GACHE,MAAM,CAACF,QAAP,CAAgBC,CAAhB,CADG,GACkB,KADzB;AAED;;AAED,eAAe,SAASE,IAAT,CAAcC,IAAd,EAAoBC,MAApB,EAA4B;AACzC,QAAMC,IAAI,GAAID,MAAM,IAAIA,MAAM,CAACE,QAAlB,GAA8Bb,KAAK,CAACW,MAAM,CAACE,QAAR,CAAnC,GAAuDZ,QAApE;AACA,SAAOI,QAAQ,CAACK,IAAD,CAAR,IAAkB,CAACJ,QAAQ,CAACI,IAAD,CAA3B,GACHI,SAAS,CAACF,IAAI,CAACF,IAAD,CAAL,EAAaC,MAAb,CADN,GAEHC,IAAI,CAACG,IAAI,CAACC,KAAL,CAAWN,IAAX,CAAD,CAFR;AAGD;AAEDD,IAAI,CAACQ,YAAL,GAAoB,MAApB;;AAEA,SAASH,SAAT,CAAmBJ,IAAnB,EAAyBC,MAAzB,EAAiC;AAC/B,MAAI,CAACT,OAAO,CAACQ,IAAD,CAAR,IAAkBN,UAAU,CAACM,IAAD,CAAhC,EAAwC;AACtCA,IAAAA,IAAI,GAAG,CAAC,GAAGA,IAAJ,CAAP;AACD;;AACD,SAAQC,MAAM,IAAIA,MAAM,CAACO,IAAlB,GACHH,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACI,SAAL,CAAeT,IAAf,CAAX,CADG,GAEHA,IAFJ;AAGD","sourcesContent":["import {\n  field, identity, isArray, isFunction, isIterable, isObject\n} from 'vega-util';\n\nfunction isBuffer(_) {\n  return (typeof Buffer === 'function' && isFunction(Buffer.isBuffer))\n    ? Buffer.isBuffer(_) : false;\n}\n\nexport default function json(data, format) {\n  const prop = (format && format.property) ? field(format.property) : identity;\n  return isObject(data) && !isBuffer(data)\n    ? parseJSON(prop(data), format)\n    : prop(JSON.parse(data));\n}\n\njson.responseType = 'json';\n\nfunction parseJSON(data, format) {\n  if (!isArray(data) && isIterable(data)) {\n    data = [...data];\n  }\n  return (format && format.copy)\n    ? JSON.parse(JSON.stringify(data))\n    : data;\n}\n"]},"metadata":{},"sourceType":"module"}